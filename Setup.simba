//{$C ON} {$B ON} {$M ON} {$F ON} {$S ON}

{$include_once GLXCore.Simba}
{$IFNDEF SRLCompatibility}
  {$include_once srl-6/lib/utilities/math.simba}
{$ENDIF}
{$include_once Misc/Graphics.Simba}
{$include_once Mouse.Simba}
{$include_once Login.Simba}
{$include_once Text.Simba}
{$include_once Bank.Simba}
{$include_once Inventory.Simba}
{$include_once Timing.Simba}
{$include_once Cache.Simba}
{$include_once Minimap.Simba}
{$include_once Interfaces.Simba}

{$include_once XPTracker.Simba}

{$IFNDEF SRLCompatibility}
  {$ifdef SMART}
    {$include_once Misc/Smart.Simba}
  {$else}
    {$ifdef SMARTOLD}
    {$include_once Misc/Smart8API.Simba}
    {$endif}
  {$endif}
{$ENDIF}

{$IFNDEF SRLCompatibility}
Procedure SetupGLX(var Smart: TSmart; W, H: Integer);
Begin
  UseSysCache := True;
  Smart.Create(W, H, '', ['OpenGL32.dll']);
  GLXMapHooks(Smart.ID);
  Smart.Graphics().Clear;
  glDebug(GL_DEBUG_MODE.GL_MODE_NONE, 0, 0, 0, Smart.Width, Smart.Height);
  GLXSetColourCapture(False);
End;
{$ELSE}
Procedure SetupGLX(W, H: Integer);
Begin
  ClearDebug;
  writeln('*** GLX_WARNING: You are currently using SRL-6''s SMART, Graphics & Mouse include! ***', #13#10#13#10);
  disableSRLLog := True;
  UseSysCache := True;
  smartClientWidth := W;
  smartClientHeight := H;
  smartShowConsole := False;
  smartEnableDrawing := true;

  initSmart(smartForceNewClient);

  if (smartEnableDrawing) then
    smartSetupDrawing();

  GLXMapHooks(__smartCurrentPid);
  smartImage.Clear();
  glDebug(GL_DEBUG_MODE.GL_MODE_NONE, 0, 0, 0, W, H);
  ClearDebug;
  writeln('*** GLX_WARNING: You are currently using SRL-6''s SMART, Graphics & Mouse include! ***', #13#10#13#10);
End;
{$ENDIF}
