{$include_once GLX/GLXCore.Simba}
{$include_once GLX/Bank.Simba}
{$include_once GLX/Cache.Simba}

Function GL_InvBounds: TBox;
Label Skip;
var
  I, J: Integer;
  Background, Others: glTextureArray;
Begin
  If (UseSysCache) Then
  Begin
    I := SysCache.Contains(CACHE_INV);
    if (I <> -1) Then
    Begin
      Result := SysCache[I].Area;
      Exit;
    End;
  End;

  Result := IntToBox(-1, -1, -1, -1);
  Background := glGetTextures(3786240);
  Others := glGetTextures([24990, 386611]);    //ChatBubble, MMCorners
  if (Length(Background) < 1) or (Length(Others) < 1) Then
    Exit;

  For I := 0 To High(Background) Do
  Begin
    For J := 0 To High(Others) Do
    Begin
      If (PointInBox(Point(Others[J].X, Others[J].Y), Background[I].Bounds)) Then
        Goto Skip;
    End;

    Result := Background[I].Bounds;
    If (UseSysCache) Then
        SysCache.CacheInventory(Result);
    Exit;
    Skip:
  End;
End;

Function GL_CountInvSlots: Integer;
Begin
  Result := Length(glGetTextures(88625, GL_InvBounds));
End;

Function GL_InvSlots: TBoxArray;
var
  I: Integer;
  Slots: glTextureArray;
Begin
  If (UseSysCache) Then
  Begin
    I := SysCache.Contains(CACHE_INVSLOTS);
    if (I <> -1) Then
    Begin
      Result := SysCache[I].Slots;
      Exit;
    End;
  End;
  Slots := glGetTextures(88625, GL_InvBounds);
  SetLength(Result, Length(Slots));
  For I := 0 To High(Slots) Do
    Result[I] := Slots[I].Bounds;

  If (UseSysCache) Then
    SysCache.CacheInventorySlots(Result);
End;

Function GL_InvCount: Integer;
  Function glGetTexturesEx(Area: TBox; IDs: TIntegerArray): glTextureArray;
  var
    Size, I, J: Cardinal;
    Ptr: Pointer;
  Begin
    J := 0;
    Result := [];
    Ptr := GLXTextures(Size);
    SetLength(Result, Size);

    For I := 0 To Size - 1 Do
    Begin
      If (PointInBox(Point(Integer((Ptr + sizeof(Integer) * 2)^), Integer((Ptr + sizeof(Integer) * 3)^)), Area) And (Not IDs.Contains(Integer(Ptr^)))) Then
      Begin
        Result[J] := glTexture(Ptr^);
        Inc(J);
      End;
      Ptr.Inc(sizeof(glTexture));
    End;
    SetLength(Result, J);
  End;
var
  I: Integer;
  BA: TBoxArray;
  BS, Found: Boolean;
  T: glTextureArray;
Begin
  Result := 0;
  BS := GL_BankScreen;

  If (Not GL_LoggedIn) Then
    Exit;

  If (Not GL_BankScreen) Then
  Begin
    BA := GL_InvSlots;
    If (Length(BA) > 0) Then
      Result := (Length(glGetTexturesEx(BA.Bounds, [3786240, 88625, 73440, 58472, 65081, 28550, 24480])) - 2);
  End Else
    Begin
      T := glGetTexturesEx(GL_BankInvBounds, [57120, 20400, 46967]);
      For I := 0 To High(T) Do
      Begin
        If (T[I].ID = 3786240) Then
          Found := True;

        If (Found) Then
        Begin
          Result := High(T) - I;
          Break;
        End;
      End;
    End;
End;

Function GL_InvFull: Boolean;
Begin
  Result := GL_InvCount >= 28;
End;

Function GL_CountItem(ID: Integer): Integer;
Begin
  Result := Length(glGetTextures(ID, GL_InvBounds));
End;

Function GL_HasItem(ID: Integer): Boolean;
Begin
  Result := GL_CountItem(ID) <> 0;
End;
