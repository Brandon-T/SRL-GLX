{$include_once GLXCore.Simba}
{$include_once Mouse.Simba}

Function GL_PinScreen: Boolean;
Begin
  Result := Length(glGetTextures(848640, 6297616, 5)) > 0;
End;

Function GL_BankScreen: Boolean;
var
  I, J: Integer;
  T: glTextureArray;
  Text: glTextArray;
Begin
  T := glGetTextures(2322540);
  If (Length(T) < 1) or GL_PinScreen Then Exit;

  For I := 0 To High(T) Do
  Begin
    Text := glCharsToTexts(glGetChars(T[I].Bounds), 4, 5);
    For J := 0 To High(Text) Do
      If (Pos('Bank of RuneScape', Text[I].Text) > 0) then
      begin
        Result := True;
        Exit;
      end;
  End;
End;

Function GL_CloseBank: Boolean;
var
  I, J: Integer;
  T, C: glTextureArray;
Begin
  Result := True;
  T := glGetTextures(2322540);
  C := glGetTextures(16320, 5055009, 5);
  If (Length(T) < 1) or (Length(C) < 1) Then Exit;

  For I := 0 To High(T) Do
    For J := 0 To High(C) Do
      If (PointInBox(MiddleBox(C[J].Bounds), T[I].Bounds)) Then
      Begin
        MouseBox(C[J].Bounds, MOUSE_LEFT);
        Wait(RandomRange(50, 75));
        Result := Not GL_BankScreen;
        Exit;
      End;
  Result := False;
End;

Function GL_ClosePinScreen: Boolean;
Var
  B: TBox;
  Text: glTextArray;
  Timer, I, J: Integer;
  UL, LR: glTextureArray;
Begin
  Result := False;
  Timer := GetSystemTime + 10000;
  UL := glGetTextures(13769);
  LR := glGetTextures(13134);
  If (Length(UL) < 1) or (Length(LR) < 1) then
    Exit;

  For I := 0 To High(UL) Do
  Begin
    B.X1 := UL[I].Bounds.X1;
    B.Y1 := UL[I].Bounds.Y1;
    B.X2 := LR[I + 1].Bounds.X2;
    B.Y2 := LR[I + 1].Bounds.Y2;
    Text := glCharsToTexts(glGetChars(B), 4, 5);
    For J := 0 To High(Text) Do
    Begin
      If (Pos('Exit', Text[J].Text) > 0) then
      Begin
        I := -1;
        Break;
      End;
    End;
    If (I = -1) Then Break;
    Inc(I);
  End;

  While GL_PinScreen Do
  Begin
    If (Timer < GetSystemTime) Then
      Break;
    MouseBox(B, MOUSE_LEFT);
    Wait(RandomRange(50, 75));
  End;
  Result := Not GL_PinScreen;
End;
